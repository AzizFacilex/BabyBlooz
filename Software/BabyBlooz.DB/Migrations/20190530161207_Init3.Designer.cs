// <auto-generated />
using System;
using BabyBlooz.DB;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BabyBlooz.DB.Migrations
{
    [DbContext(typeof(BabyBloozDbContext))]
    [Migration("20190530161207_Init3")]
    partial class Init3
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.4-servicing-10062")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("BabyBlooz.DB.Entities.Data", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<double>("Heartbeat");

                    b.Property<string>("LilypadId");

                    b.Property<double>("Movement");

                    b.Property<DateTime>("RecordedAt");

                    b.Property<string>("ReportId");

                    b.Property<double>("Sound");

                    b.Property<double>("Temperature");

                    b.HasKey("Id");

                    b.HasIndex("LilypadId");

                    b.HasIndex("ReportId");

                    b.ToTable("Datas");
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.Lilypad", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("QRCode");

                    b.HasKey("Id");

                    b.ToTable("Lilypads");
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.LilypadUser", b =>
                {
                    b.Property<string>("LilypadId");

                    b.Property<string>("UserId");

                    b.HasKey("LilypadId", "UserId");

                    b.HasIndex("UserId");

                    b.ToTable("LilypadUser");
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.Report", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HeartbeatMSG");

                    b.Property<string>("MovementMSG");

                    b.Property<string>("SoundMSG");

                    b.Property<string>("TemperatureMSG");

                    b.HasKey("Id");

                    b.ToTable("Reports");
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("NotificationsEnabled");

                    b.Property<ushort>("ReportDataInterval");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.Wifi", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("LilypadId");

                    b.Property<string>("Password");

                    b.Property<string>("SSID");

                    b.HasKey("Id");

                    b.HasIndex("LilypadId");

                    b.ToTable("Wifis");
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.Data", b =>
                {
                    b.HasOne("BabyBlooz.DB.Entities.Lilypad", "Lilypad")
                        .WithMany()
                        .HasForeignKey("LilypadId");

                    b.HasOne("BabyBlooz.DB.Entities.Report")
                        .WithMany("Data")
                        .HasForeignKey("ReportId");
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.LilypadUser", b =>
                {
                    b.HasOne("BabyBlooz.DB.Entities.Lilypad", "Lilypad")
                        .WithMany("LilypadUsers")
                        .HasForeignKey("LilypadId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("BabyBlooz.DB.Entities.User", "User")
                        .WithMany("LilypadUsers")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("BabyBlooz.DB.Entities.Wifi", b =>
                {
                    b.HasOne("BabyBlooz.DB.Entities.Lilypad")
                        .WithMany("Wifis")
                        .HasForeignKey("LilypadId");
                });
#pragma warning restore 612, 618
        }
    }
}
